{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red77\green80\blue85;\red246\green247\blue249;\red46\green49\blue51;
\red20\green67\blue174;\red186\green6\blue115;\red24\green25\blue27;\red162\green0\blue16;\red18\green115\blue126;
}
{\*\expandedcolortbl;;\cssrgb\c37255\c38824\c40784;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c9412\c35294\c73725;\cssrgb\c78824\c15294\c52549;\cssrgb\c12549\c12941\c14118;\cssrgb\c70196\c7843\c7059;\cssrgb\c3529\c52157\c56863;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // GLOBAL CONSTANTS - MAKE SURE THESE ARE AT THE TOP\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf7 \strokec7 getActiveSpreadsheet\cf4 \strokec4 ().\cf7 \strokec7 getId\cf4 \strokec4 ();\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 WORKOUT_PLAN_SHEET_NAME\cf4 \strokec4  = \cf8 \strokec8 "WorkoutPlan"\cf4 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf6 \strokec6 WORKOUT_LOG_SHEET_NAME\cf4 \strokec4  = \cf8 \strokec8 "WorkoutLog"\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // MAIN FUNCTION FOR WEB APP\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf7 \strokec7 doGet\cf4 \strokec4 (\cf7 \strokec7 e\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf6 \strokec6 HtmlService\cf4 \strokec4 .\cf7 \strokec7 createHtmlOutputFromFile\cf4 \strokec4 (\cf8 \strokec8 'Index'\cf4 \strokec4 )\cb1 \
\cb3     .\cf7 \strokec7 setTitle\cf4 \strokec4 (\cf8 \strokec8 'FitTrack'\cf4 \strokec4 ) \cf2 \strokec2 // Ensure this matches the <title> in Index.html\cf4 \cb1 \strokec4 \
\cb3     .\cf7 \strokec7 setXFrameOptionsMode\cf4 \strokec4 (\cf6 \strokec6 HtmlService\cf4 \strokec4 .\cf6 \strokec6 XFrameOptionsMode\cf4 \strokec4 .\cf6 \strokec6 ALLOWALL\cf4 \strokec4 );\cb1 \
\cb3     \cf2 \strokec2 // Meta tags for PWA are now primarily in Index.html for better control\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // HELPER FUNCTION TO GET TODAY'S DATE STRING FOR HTML\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf7 \strokec7 getTodaysDateString\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 today\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 year\cf4 \strokec4  = \cf7 \strokec7 today\cf4 \strokec4 .\cf7 \strokec7 getFullYear\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 month\cf4 \strokec4  = (\cf8 \strokec8 '0'\cf4 \strokec4  + (\cf7 \strokec7 today\cf4 \strokec4 .\cf7 \strokec7 getMonth\cf4 \strokec4 () + \cf9 \strokec9 1\cf4 \strokec4 )).\cf7 \strokec7 slice\cf4 \strokec4 (-\cf9 \strokec9 2\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 day\cf4 \strokec4  = (\cf8 \strokec8 '0'\cf4 \strokec4  + \cf7 \strokec7 today\cf4 \strokec4 .\cf7 \strokec7 getDate\cf4 \strokec4 ()).\cf7 \strokec7 slice\cf4 \strokec4 (-\cf9 \strokec9 2\cf4 \strokec4 );\cb1 \
\cb3   \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 `\cf4 \strokec4 $\{\cf7 \strokec7 year\cf4 \strokec4 \}\cf8 \strokec8 -\cf4 \strokec4 $\{\cf7 \strokec7 month\cf4 \strokec4 \}\cf8 \strokec8 -\cf4 \strokec4 $\{\cf7 \strokec7 day\cf4 \strokec4 \}\cf8 \strokec8 `\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // FUNCTION TO GET WORKOUT PLAN FROM SHEET\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf7 \strokec7 getWorkoutPlan\cf4 \strokec4 (\cf7 \strokec7 dateString\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 sheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf7 \strokec7 openById\cf4 \strokec4 (\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 ).\cf7 \strokec7 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 WORKOUT_PLAN_SHEET_NAME\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf7 \strokec7 sheet\cf4 \strokec4 ) \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 "WorkoutPlan sheet not found. Check sheet name and SPREADSHEET_ID."\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 data\cf4 \strokec4  = \cf7 \strokec7 sheet\cf4 \strokec4 .\cf7 \strokec7 getDataRange\cf4 \strokec4 ().\cf7 \strokec7 getValues\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 headers\cf4 \strokec4  = \cf7 \strokec7 data\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ];\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 plan\cf4 \strokec4  = [];\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 dateCol\cf4 \strokec4  = \cf7 \strokec7 headers\cf4 \strokec4 .\cf7 \strokec7 indexOf\cf4 \strokec4 (\cf8 \strokec8 "Date"\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 exerciseCol\cf4 \strokec4  = \cf7 \strokec7 headers\cf4 \strokec4 .\cf7 \strokec7 indexOf\cf4 \strokec4 (\cf8 \strokec8 "Exercise"\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 typeCol\cf4 \strokec4  = \cf7 \strokec7 headers\cf4 \strokec4 .\cf7 \strokec7 indexOf\cf4 \strokec4 (\cf8 \strokec8 "Exercise Type"\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 setsCol\cf4 \strokec4  = \cf7 \strokec7 headers\cf4 \strokec4 .\cf7 \strokec7 indexOf\cf4 \strokec4 (\cf8 \strokec8 "Target Sets"\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 repsTimeCol\cf4 \strokec4  = \cf7 \strokec7 headers\cf4 \strokec4 .\cf7 \strokec7 indexOf\cf4 \strokec4 (\cf8 \strokec8 "Target Reps/Time"\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 weightSpeedCol\cf4 \strokec4  = \cf7 \strokec7 headers\cf4 \strokec4 .\cf7 \strokec7 indexOf\cf4 \strokec4 (\cf8 \strokec8 "Target Weight (kg) / Speed (km/hr)"\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 inclineLevelCol\cf4 \strokec4  = \cf7 \strokec7 headers\cf4 \strokec4 .\cf7 \strokec7 indexOf\cf4 \strokec4 (\cf8 \strokec8 "Target Incline/Level"\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 notesCol\cf4 \strokec4  = \cf7 \strokec7 headers\cf4 \strokec4 .\cf7 \strokec7 indexOf\cf4 \strokec4 (\cf8 \strokec8 "Notes"\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  ([\cf7 \strokec7 dateCol\cf4 \strokec4 , \cf7 \strokec7 exerciseCol\cf4 \strokec4 , \cf7 \strokec7 setsCol\cf4 \strokec4 , \cf7 \strokec7 repsTimeCol\cf4 \strokec4 ].\cf7 \strokec7 some\cf4 \strokec4 (\cf7 \strokec7 col\cf4 \strokec4  => \cf7 \strokec7 col\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 )) \{\cb1 \
\cb3       \cf5 \strokec5 let\cf4 \strokec4  \cf7 \strokec7 missingCols\cf4 \strokec4  = [];\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4 (\cf7 \strokec7 dateCol\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 ) \cf7 \strokec7 missingCols\cf4 \strokec4 .\cf7 \strokec7 push\cf4 \strokec4 (\cf8 \strokec8 "Date"\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4 (\cf7 \strokec7 exerciseCol\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 ) \cf7 \strokec7 missingCols\cf4 \strokec4 .\cf7 \strokec7 push\cf4 \strokec4 (\cf8 \strokec8 "Exercise"\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4 (\cf7 \strokec7 setsCol\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 ) \cf7 \strokec7 missingCols\cf4 \strokec4 .\cf7 \strokec7 push\cf4 \strokec4 (\cf8 \strokec8 "Target Sets"\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4 (\cf7 \strokec7 repsTimeCol\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 ) \cf7 \strokec7 missingCols\cf4 \strokec4 .\cf7 \strokec7 push\cf4 \strokec4 (\cf8 \strokec8 "Target Reps/Time"\cf4 \strokec4 );\cb1 \
\cb3       \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 `One or more required columns are missing in WorkoutPlan sheet: \cf4 \strokec4 $\{\cf7 \strokec7 missingCols\cf4 \strokec4 .\cf7 \strokec7 join\cf4 \strokec4 (\cf8 \strokec8 ', '\cf4 \strokec4 )\}\cf8 \strokec8 .`\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (\cf7 \strokec7 typeCol\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf7 \strokec7 log\cf4 \strokec4 (\cf8 \strokec8 "Warning: 'Exercise Type' column not found in WorkoutPlan sheet. Icons might not work as expected."\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3      \cf5 \strokec5 if\cf4 \strokec4  (\cf7 \strokec7 notesCol\cf4 \strokec4  === -\cf9 \strokec9 1\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf6 \strokec6 Logger\cf4 \strokec4 .\cf7 \strokec7 log\cf4 \strokec4 (\cf8 \strokec8 "Warning: 'Notes' column not found in WorkoutPlan sheet. Subtitles might be missing."\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 let\cf4 \strokec4  \cf7 \strokec7 planDate\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf7 \strokec7 dateString\cf4 \strokec4  + \cf8 \strokec8 "T00:00:00"\cf4 \strokec4 ); \cb1 \
\
\cb3     \cf5 \strokec5 for\cf4 \strokec4  (\cf5 \strokec5 let\cf4 \strokec4  \cf7 \strokec7 i\cf4 \strokec4  = \cf9 \strokec9 1\cf4 \strokec4 ; \cf7 \strokec7 i\cf4 \strokec4  < \cf7 \strokec7 data\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4 ; \cf7 \strokec7 i\cf4 \strokec4 ++) \{\cb1 \
\cb3       \cf5 \strokec5 let\cf4 \strokec4  \cf7 \strokec7 rowDateVal\cf4 \strokec4  = \cf7 \strokec7 data\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 ][\cf7 \strokec7 dateCol\cf4 \strokec4 ];\cb1 \
\cb3       \cf5 \strokec5 let\cf4 \strokec4  \cf7 \strokec7 rowDate\cf4 \strokec4 ;\cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4  (\cf7 \strokec7 rowDateVal\cf4 \strokec4  \cf5 \strokec5 instanceof\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf7 \strokec7 rowDate\cf4 \strokec4  = \cf7 \strokec7 rowDateVal\cf4 \strokec4 ;\cb1 \
\cb3       \} \cf5 \strokec5 else\cf4 \strokec4  \cf5 \strokec5 if\cf4 \strokec4  (\cf5 \strokec5 typeof\cf4 \strokec4  \cf7 \strokec7 rowDateVal\cf4 \strokec4  === \cf8 \strokec8 'string'\cf4 \strokec4  || \cf5 \strokec5 typeof\cf4 \strokec4  \cf7 \strokec7 rowDateVal\cf4 \strokec4  === \cf8 \strokec8 'number'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 parts\cf4 \strokec4  = \cf6 \strokec6 String\cf4 \strokec4 (\cf7 \strokec7 rowDateVal\cf4 \strokec4 ).\cf7 \strokec7 split\cf4 \strokec4 (\cf8 \strokec8 '-'\cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  (\cf7 \strokec7 parts\cf4 \strokec4 .\cf7 \strokec7 length\cf4 \strokec4  === \cf9 \strokec9 3\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf7 \strokec7 rowDate\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf7 \strokec7 parts\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ], \cf7 \strokec7 parts\cf4 \strokec4 [\cf9 \strokec9 1\cf4 \strokec4 ] - \cf9 \strokec9 1\cf4 \strokec4 , \cf7 \strokec7 parts\cf4 \strokec4 [\cf9 \strokec9 2\cf4 \strokec4 ]); \cb1 \
\cb3         \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3             \cf7 \strokec7 rowDate\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 (\cf7 \strokec7 rowDateVal\cf4 \strokec4 ); \cb1 \
\cb3         \}\cb1 \
\cb3       \} \cf5 \strokec5 else\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 continue\cf4 \strokec4 ; \cb1 \
\cb3       \}\cb1 \
\
\cb3       \cf7 \strokec7 rowDate\cf4 \strokec4 .\cf7 \strokec7 setHours\cf4 \strokec4 (\cf9 \strokec9 0\cf4 \strokec4 ,\cf9 \strokec9 0\cf4 \strokec4 ,\cf9 \strokec9 0\cf4 \strokec4 ,\cf9 \strokec9 0\cf4 \strokec4 ); \cb1 \
\cb3       \cb1 \
\cb3       \cf5 \strokec5 if\cf4 \strokec4  (\cf7 \strokec7 rowDate\cf4 \strokec4 .\cf7 \strokec7 getTime\cf4 \strokec4 () === \cf7 \strokec7 planDate\cf4 \strokec4 .\cf7 \strokec7 getTime\cf4 \strokec4 ()) \{\cb1 \
\cb3         \cf7 \strokec7 plan\cf4 \strokec4 .\cf7 \strokec7 push\cf4 \strokec4 (\{\cb1 \
\cb3           \cf7 \strokec7 exercise\cf4 \strokec4 : \cf7 \strokec7 data\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 ][\cf7 \strokec7 exerciseCol\cf4 \strokec4 ],\cb1 \
\cb3           \cf7 \strokec7 exerciseType\cf4 \strokec4 : \cf7 \strokec7 typeCol\cf4 \strokec4  !== -\cf9 \strokec9 1\cf4 \strokec4  ? \cf7 \strokec7 data\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 ][\cf7 \strokec7 typeCol\cf4 \strokec4 ] : \cf8 \strokec8 "Default"\cf4 \strokec4 ,\cb1 \
\cb3           \cf7 \strokec7 targetSets\cf4 \strokec4 : \cf7 \strokec7 data\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 ][\cf7 \strokec7 setsCol\cf4 \strokec4 ],\cb1 \
\cb3           \cf7 \strokec7 targetRepsTime\cf4 \strokec4 : \cf7 \strokec7 data\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 ][\cf7 \strokec7 repsTimeCol\cf4 \strokec4 ],\cb1 \
\cb3           \cf7 \strokec7 targetWeightSpeed\cf4 \strokec4 : \cf7 \strokec7 weightSpeedCol\cf4 \strokec4  !== -\cf9 \strokec9 1\cf4 \strokec4  ? \cf7 \strokec7 data\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 ][\cf7 \strokec7 weightSpeedCol\cf4 \strokec4 ] : \cf8 \strokec8 ""\cf4 \strokec4 ,\cb1 \
\cb3           \cf7 \strokec7 targetInclineLevel\cf4 \strokec4 : \cf7 \strokec7 inclineLevelCol\cf4 \strokec4  !== -\cf9 \strokec9 1\cf4 \strokec4  ? \cf7 \strokec7 data\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 ][\cf7 \strokec7 inclineLevelCol\cf4 \strokec4 ] : \cf8 \strokec8 ""\cf4 \strokec4 ,\cb1 \
\cb3           \cf7 \strokec7 notes\cf4 \strokec4 : \cf7 \strokec7 notesCol\cf4 \strokec4  !== -\cf9 \strokec9 1\cf4 \strokec4  ? \cf7 \strokec7 data\cf4 \strokec4 [\cf7 \strokec7 i\cf4 \strokec4 ][\cf7 \strokec7 notesCol\cf4 \strokec4 ] : \cf8 \strokec8 ""\cf4 \cb1 \strokec4 \
\cb3         \});\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{ \cf7 \strokec7 success\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 , \cf7 \strokec7 data\cf4 \strokec4 : \cf7 \strokec7 plan\cf4 \strokec4  \};\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf7 \strokec7 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf6 \strokec6 Logger\cf4 \strokec4 .\cf7 \strokec7 log\cf4 \strokec4 (\cf8 \strokec8 "Error in getWorkoutPlan: "\cf4 \strokec4  + \cf7 \strokec7 error\cf4 \strokec4 .\cf7 \strokec7 toString\cf4 \strokec4 () + \cf8 \strokec8 " Stack: "\cf4 \strokec4  + (\cf7 \strokec7 error\cf4 \strokec4 .\cf7 \strokec7 stack\cf4 \strokec4  ? \cf7 \strokec7 error\cf4 \strokec4 .\cf7 \strokec7 stack\cf4 \strokec4  : \cf8 \strokec8 'No stack'\cf4 \strokec4 ));\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{ \cf7 \strokec7 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 , \cf7 \strokec7 message\cf4 \strokec4 : \cf8 \strokec8 "Error fetching plan: "\cf4 \strokec4  + \cf7 \strokec7 error\cf4 \strokec4 .\cf7 \strokec7 message\cf4 \strokec4  \};\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // FUNCTION TO LOG WORKOUT ENTRY TO SHEET\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 function\cf4 \strokec4  \cf7 \strokec7 logWorkoutEntry\cf4 \strokec4 (\cf7 \strokec7 logData\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 sheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf7 \strokec7 openById\cf4 \strokec4 (\cf6 \strokec6 SPREADSHEET_ID\cf4 \strokec4 ).\cf7 \strokec7 getSheetByName\cf4 \strokec4 (\cf6 \strokec6 WORKOUT_LOG_SHEET_NAME\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  (!\cf7 \strokec7 sheet\cf4 \strokec4 ) \cf5 \strokec5 throw\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Error\cf4 \strokec4 (\cf8 \strokec8 "WorkoutLog sheet not found. Check sheet name."\cf4 \strokec4 );\cb1 \
\
\cb3     \cf5 \strokec5 const\cf4 \strokec4  \cf7 \strokec7 timestamp\cf4 \strokec4  = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ();\cb1 \
\cb3     \cf7 \strokec7 sheet\cf4 \strokec4 .\cf7 \strokec7 appendRow\cf4 \strokec4 ([\cb1 \
\cb3       \cf7 \strokec7 timestamp\cf4 \strokec4 ,\cb1 \
\cb3       \cf7 \strokec7 logData\cf4 \strokec4 .\cf7 \strokec7 dateOfWorkout\cf4 \strokec4 ,\cb1 \
\cb3       \cf7 \strokec7 logData\cf4 \strokec4 .\cf7 \strokec7 exerciseLogged\cf4 \strokec4 ,\cb1 \
\cb3       \cf7 \strokec7 logData\cf4 \strokec4 .\cf5 \strokec5 set\cf4 \strokec4 ,\cb1 \
\cb3       \cf7 \strokec7 logData\cf4 \strokec4 .\cf7 \strokec7 actualRepsTime\cf4 \strokec4 ,\cb1 \
\cb3       \cf7 \strokec7 logData\cf4 \strokec4 .\cf7 \strokec7 actualWeightSpeed\cf4 \strokec4 ,\cb1 \
\cb3       \cf7 \strokec7 logData\cf4 \strokec4 .\cf7 \strokec7 actualInclineLevel\cf4 \strokec4 ,\cb1 \
\cb3       \cf7 \strokec7 logData\cf4 \strokec4 .\cf7 \strokec7 userNotes\cf4 \cb1 \strokec4 \
\cb3     ]);\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{ \cf7 \strokec7 success\cf4 \strokec4 : \cf5 \strokec5 true\cf4 \strokec4 , \cf7 \strokec7 message\cf4 \strokec4 : \cf8 \strokec8 "Entry logged successfully!"\cf4 \strokec4  \};\cb1 \
\cb3   \} \cf5 \strokec5 catch\cf4 \strokec4  (\cf7 \strokec7 error\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf6 \strokec6 Logger\cf4 \strokec4 .\cf7 \strokec7 log\cf4 \strokec4 (\cf8 \strokec8 "Error in logWorkoutEntry: "\cf4 \strokec4  + \cf7 \strokec7 error\cf4 \strokec4 .\cf7 \strokec7 toString\cf4 \strokec4 () + \cf8 \strokec8 " Stack: "\cf4 \strokec4  + (\cf7 \strokec7 error\cf4 \strokec4 .\cf7 \strokec7 stack\cf4 \strokec4  ? \cf7 \strokec7 error\cf4 \strokec4 .\cf7 \strokec7 stack\cf4 \strokec4  : \cf8 \strokec8 'No stack'\cf4 \strokec4 ));\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{ \cf7 \strokec7 success\cf4 \strokec4 : \cf5 \strokec5 false\cf4 \strokec4 , \cf7 \strokec7 message\cf4 \strokec4 : \cf8 \strokec8 "Failed to log entry: "\cf4 \strokec4  + \cf7 \strokec7 error\cf4 \strokec4 .\cf7 \strokec7 message\cf4 \strokec4  \};\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
}